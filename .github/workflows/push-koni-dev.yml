name: Koni Dev
on:
  pull_request:
    branches:
      - koni-dev
      - upgrade-ui
      - subwallet-dev
  push:
    branches:
      - koni-dev
      - upgrade-ui
      - subwallet-dev

jobs:
  master:
    if: "! startsWith(github.event.head_commit.message, '[CI Skip]')"
    runs-on: ubuntu-22.04
    name: Build Development Preview
    environment: 'extension'
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.GH_PAT }}
    - name: Set Params
      id: setup_params
      run: |
        time_tag="$(date +'%Y-%m-%d_%H-%M')"
        ref_with_prefix="${{ github.ref }}"
        ref_without_prefix="${ref_with_prefix#refs/heads/}"

        echo "time_tag=$time_tag" >> $GITHUB_OUTPUT
        if [[ -n "${{ github.event.pull_request }}" ]]; then
          echo "ref=pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
        else
          echo "ref=$ref_without_prefix" >> $GITHUB_OUTPUT
        fi
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'
    - name: Build Dev
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        GH_PAT: ${{ secrets.GH_PAT }}
        GH_RELEASE_GITHUB_API_TOKEN: ${{ secrets.GH_PAT }}
        TRANSAK_API_KEY: ${{ secrets.TRANSAK_API_KEY }}
        COINBASE_PAY_ID: ${{ secrets.COINBASE_PAY_ID }}
        CHAINFLIP_BROKER_API: ${{ secrets.CHAINFLIP_BROKER_API }}
        BITTENSOR_API_KEY_1: ${{ secrets.BITTENSOR_API_KEY_1 }}
        BITTENSOR_API_KEY_2: ${{ secrets.BITTENSOR_API_KEY_2 }}
        BITTENSOR_API_KEY_3: ${{ secrets.BITTENSOR_API_KEY_3 }}
        BITTENSOR_API_KEY_4: ${{ secrets.BITTENSOR_API_KEY_4 }}
        BITTENSOR_API_KEY_5: ${{ secrets.BITTENSOR_API_KEY_5 }}
        BITTENSOR_API_KEY_6: ${{ secrets.BITTENSOR_API_KEY_6 }}
        BITTENSOR_API_KEY_7: ${{ secrets.BITTENSOR_API_KEY_7 }}
        BITTENSOR_API_KEY_8: ${{ secrets.BITTENSOR_API_KEY_8 }}
        BITTENSOR_API_KEY_9: ${{ secrets.BITTENSOR_API_KEY_9 }}
        BITTENSOR_API_KEY_10: ${{ secrets.BITTENSOR_API_KEY_10 }}
        SIMPLE_SWAP_API_KEY: ${{ secrets.SIMPLE_SWAP_API_KEY }}
        UNISWAP_API_KEY:  ${{ secrets.UNISWAP_API_KEY }}
        KYBER_CLIENT_ID: ${{ secrets.KYBER_CLIENT_ID }}
        SUBWALLET_API: ${{ secrets.SUBWALLET_API }}
        BLOCKFROST_API_KEY_MAIN: ${{ secrets.BLOCKFROST_API_KEY_MAIN }}
        BLOCKFROST_API_KEY_PREP: ${{ secrets.BLOCKFROST_API_KEY_PREP }}
        MELD_API_KEY: ${{ secrets.MELD_API_KEY }}
        MELD_WIZARD_KEY: ${{ secrets.MELD_WIZARD_KEY }}
        PARASPELL_API_KEY: ${{ secrets.PARASPELL_API_KEY }}
        GH_RELEASE_FILES: master-build.zip,master-src.zip
        COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        REF_NAME: ${{ github.ref_name }}
        PR_NUMBER: ${{ github.event.number }}
        TARGET_BRANCH: ${{ github.event.pull_request.base.ref }}
        CURRENT_BRANCH: ${{ github.event.pull_request.head.ref || github.ref }}
        BRANCH_NAME: ${{ github.ref_name }}
      run: |
        yarn install --immutable | grep -v 'YN0013'
        yarn build:koni-dev
    # Deploy after build
    - name: Upload to Build to Nextcloud
      id: nextcloud_upload
      uses: trympet/nextcloud-artifacts-action@v2
      with:
        name: '${{ steps.setup_params.outputs.ref }}-build-${{ steps.setup_params.outputs.time_tag }}'
        path: 'master-build.zip'
        nextcloud-url: 'https://file.cdmteck.com'
        nextcloud-username: ${{ secrets.NEXTCLOUD_USERNAME }}
        nextcloud-password: ${{ secrets.NEXTCLOUD_PASSWORD }}
    - name: Upload to Build Firefox to Nextcloud
      id: nextcloud_upload_firefox
      uses: trympet/nextcloud-artifacts-action@v2
      with:
        name: '${{ steps.setup_params.outputs.ref }}-build-firefox-${{ steps.setup_params.outputs.time_tag }}'
        path: 'master-build-firefox.zip'
        nextcloud-url: 'https://file.cdmteck.com'
        nextcloud-username: ${{ secrets.NEXTCLOUD_USERNAME }}
        nextcloud-password: ${{ secrets.NEXTCLOUD_PASSWORD }}
    - name: Deploy Webrunner to Netlify
      id: netlify_deployment
      uses: nwtgck/actions-netlify@v2.0
      with:
        publish-dir: './packages/web-runner/build'
        alias: ${{ steps.setup_params.outputs.ref }}
        github-token: ${{ secrets.GH_PAT }}
        deploy-message: ${{ github.event.head_commit.message }}
        enable-pull-request-comment: true
        enable-commit-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_WEB_RUNNER_SITE_ID }}
      timeout-minutes: 1
    - name: Notify to Discord
      uses: sarisia/actions-status-discord@v1
      if: always()
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        status: ${{ job.status }}
        username: Extension Worker
        title: ${{ github.workflow }}
        description: |
          The Deployment has been completed.
          - Extension: ${{ steps.nextcloud_upload.outputs.SHAREABLE_URL }}
          - Extension (Firefox): ${{ steps.nextcloud_upload_firefox.outputs.SHAREABLE_URL }}
          - Web-runner: ${{ steps.netlify_deployment.outputs.deploy-url }}
